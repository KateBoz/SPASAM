#if !defined(_TIM_EM_)
#  define _TIM_EM_

class model_data : public ad_comm{
  data_int nages;
  data_int nyrs;
  data_int npops;
  data_ivector nregions;
  data_ivector nfleets;
  data_ivector nfleets_survey;
  ivector nfs;
  data_matrix tsurvey;
  data_number larval_move_switch;
  data_number move_switch;
  data_number natal_homing_switch;
  data_number spawn_return_switch;
  data_number select_switch;
  data_number select_switch_survey;
  data_number maturity_switch_equil;
  data_number SSB_type;
  data_number Rec_type;
  data_number apportionment_type;
  data_number use_stock_comp_info_survey;
  data_number use_stock_comp_info_catch;
  data_number F_switch;
  data_number recruit_devs_switch;
  data_number recruit_randwalk_switch;
  data_vector tspawn;
  data_number return_age;
  data_vector return_probability;
  data_vector spawn_return_prob;
  data_int do_tag;
  data_int do_tag_mult;
  data_vector sigma_recruit;
  data_int ph_lmr;
  data_int ph_rec;
  data_int ph_abund_devs;
  data_int ph_F;
  data_int ph_steep;
  data_int ph_M;
  data_int ph_sel_log;
  data_number lb_sel_beta1;
  data_number ub_sel_beta1;
  data_number lb_sel_beta2;
  data_number ub_sel_beta2;
  data_int ph_sel_log_surv;
  data_int ph_sel_dubl;
  data_int ph_sel_dubl_surv;
  data_int ph_q;
  data_int ph_F_rho;
  data_int phase_T_YR;
  data_int phase_T_CNST;
  data_int ph_dummy;
  double ph_theta;
  data_number wt_srv;
  data_number wt_catch;
  data_number wt_fish_age;
  data_number wt_srv_age;
  data_number wt_rec;
  data_number wt_tag;
  data_int abund_pen_switch;
  data_int move_pen_switch;
  data_number Tpen;
  data_number Tpen2;
  data_matrix input_Rec_prop;
  data_3array input_weight;
  data_3array input_catch_weight;
  data_3array fecundity;
  data_3array maturity;
  data_matrix prop_fem;
  data_3array OBS_rec_index_BM;
  data_4array OBS_survey_fleet_bio;
  data_4array OBS_survey_fleet_bio_se;
  data_5array OBS_survey_prop;
  data_4array OBS_survey_prop_N;
  data_4array OBS_yield_fleet;
  data_4array OBS_yield_fleet_se;
  data_5array OBS_catch_at_age_fleet_prop;
  data_4array OBS_catch_at_age_fleet_prop_N;
  data_int nyrs_release;
  data_vector yrs_releases;
  data_int max_life_tags;
  data_3array report_rate;
  data_4array ntags;
  data_vector ntags_total;
  data_4array OBS_tag_prop_N;
  data_5array input_T;
  data_5array OBS_tag_prop_final;
  dmatrix input_residency_larval;
  d3_array input_residency;
  dvector frac_total_abund_tagged;
  data_4array init_abund_TRUE;
  data_matrix input_M;
  data_3array q_survey_TRUE;
  data_3array sel_beta1_TRUE;
  data_3array sel_beta2_TRUE;
  data_3array sel_beta3_TRUE;
  data_3array sel_beta4_TRUE;
  data_3array sel_beta1_survey_TRUE;
  data_3array sel_beta2_survey_TRUE;
  data_3array sel_beta3_survey_TRUE;
  data_3array sel_beta4_survey_TRUE;
  data_vector steep_TRUE;
  data_vector R_ave_TRUE;
  data_vector SSB_zero_TRUE;
  data_matrix rec_devs_TRUE;
  data_3array Rec_Prop_TRUE;
  data_3array recruits_BM_TRUE;
  data_4array F_TRUE;
  data_4array F_year_TRUE;
  data_3array biomass_AM_TRUE;
  data_matrix biomass_population_TRUE;
  data_3array harvest_rate_region_bio_TRUE;
  data_3array depletion_region_TRUE;
  data_3array SSB_region_TRUE;
  data_matrix Bratio_population_TRUE;
  data_5array T_year_TRUE;
  data_4array selectivity_age_TRUE;
  data_4array survey_selectivity_age_TRUE;
  data_int debug;
  dvector years;
  imatrix nregions_temp;
  ivector nreg_temp;
  int a;
  int y;
  int z;
  int k;
  int j;
  int i;
  int s;
  int r;
  int n;
  int w;
  int p;
  int v;
  int x;
  int u;
  int d;
  int xx;
  int region_counter;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  virtual void * mycast(void) {return (void*)this;}
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_bounded_matrix ln_T_YR;
  param_init_bounded_matrix ln_T_CNST;
  param_matrix G;
  param_vector G_temp;
  param_init_bounded_matrix log_sel_beta1;
  param_init_bounded_matrix log_sel_beta2;
  param_init_bounded_matrix log_sel_beta3;
  param_init_bounded_matrix log_sel_beta4;
  param_init_bounded_matrix log_sel_beta1surv;
  param_init_bounded_matrix log_sel_beta2surv;
  param_init_bounded_matrix log_sel_beta3surv;
  param_init_bounded_matrix log_sel_beta4surv;
  param_3array sel_beta1;
  param_3array sel_beta2;
  param_3array sel_beta3;
  param_3array sel_beta4;
  param_3array sel_beta1surv;
  param_3array sel_beta2surv;
  param_3array sel_beta3surv;
  param_3array sel_beta4surv;
  param_5array survey_selectivity;
  param_5array selectivity;
  param_4array survey_selectivity_age;
  param_4array selectivity_age;
  param_init_bounded_matrix ln_q;
  param_3array q_survey;
  param_init_bounded_matrix ln_F;
  param_init_bounded_matrix F_rho;
  param_5array F_fleet;
  param_4array F_year;
  param_4array F;
  param_4array M;
  param_7array tags_avail;
  param_4array total_rec;
  param_4array not_rec;
  param_7array tag_prop;
  param_4array tag_prop_not_rec;
  param_5array tag_prop_final;
  param_6array T;
  param_5array T_terminal;
  param_5array T_year;
  param_7array recaps;
  param_init_bounded_matrix ln_rec_prop;
  param_init_d3array ln_rec_prop_year;
  param_init_bounded_matrix ln_rec_devs_RN;
  param_init_bounded_matrix ln_abund_devs;
  param_matrix abund_devs;
  param_matrix rec_devs;
  param_init_bounded_vector ln_R_ave;
  param_vector R_ave;
  param_vector SSB_zero;
  param_init_bounded_vector steep;
  param_vector alpha;
  param_vector beta;
  param_matrix SR;
  param_matrix total_recruits;
  param_4array init_abund;
  param_6array survey_fleet_overlap_age;
  param_6array survey_at_age_region_fleet_overlap_prop;
  param_6array survey_fleet_overlap_age_bio;
  param_6array catch_at_age_region_fleet_overlap;
  param_6array catch_at_age_region_fleet_overlap_prop;
  param_6array yield_region_fleet_temp_overlap;
  param_4array weight_population;
  param_4array weight_catch;
  param_3array wt_mat_mult;
  param_4array wt_mat_mult_reg;
  param_3array ave_mat_temp;
  param_matrix ave_mat;
  param_matrix SPR_N;
  param_matrix SPR_SSB;
  param_vector SPR;
  param_3array recruits_BM;
  param_3array recruits_AM;
  param_3array rec_index_BM;
  param_3array rec_index_AM;
  param_3array rec_index_prop_BM;
  param_3array rec_index_BM_temp;
  param_3array rec_index_prop_AM;
  param_3array rec_index_AM_temp;
  param_matrix rec_devs_randwalk;
  param_3array Rec_Prop;
  param_3array Rec_prop_temp1;
  param_3array Rec_prop_temp2;
  param_vector env_rec;
  param_4array abundance_at_age_BM;
  param_4array abundance_at_age_AM;
  param_4array abundance_in;
  param_4array abundance_res;
  param_4array abundance_leave;
  param_4array abundance_spawn;
  param_4array biomass_BM_age;
  param_4array biomass_AM_age;
  param_3array biomass_BM;
  param_3array biomass_AM;
  param_4array bio_in;
  param_4array bio_res;
  param_4array bio_leave;
  param_5array catch_at_age_fleet;
  param_5array catch_at_age_fleet_prop;
  param_4array yield_fleet;
  param_4array catch_at_age_region;
  param_4array catch_at_age_region_prop;
  param_3array yield_region;
  param_3array catch_at_age_population;
  param_3array catch_at_age_population_prop;
  param_matrix yield_population;
  param_3array SSB_region;
  param_matrix SSB_population;
  param_vector SSB_total;
  param_3array abundance_population;
  param_matrix abundance_total;
  param_matrix biomass_population;
  param_vector biomass_total;
  param_matrix catch_at_age_total;
  param_matrix catch_at_age_total_prop;
  param_vector yield_total;
  param_4array harvest_rate_region_num;
  param_3array harvest_rate_population_num;
  param_matrix harvest_rate_total_num;
  param_3array harvest_rate_region_bio;
  param_matrix harvest_rate_population_bio;
  param_vector harvest_rate_total_bio;
  param_3array depletion_region;
  param_matrix depletion_population;
  param_vector depletion_total;
  param_5array abundance_at_age_BM_overlap_region;
  param_4array abundance_at_age_BM_overlap_population;
  param_5array abundance_at_age_AM_overlap_region;
  param_4array abundance_at_age_AM_overlap_population;
  param_4array abundance_AM_overlap_region_all_natal;
  param_5array abundance_spawn_overlap;
  param_4array SSB_region_overlap;
  param_3array SSB_population_overlap;
  param_matrix SSB_natal_overlap;
  param_5array biomass_BM_overlap_temp;
  param_4array init_abund_temp;
  param_5array survey_fleet_bio_overlap_temp;
  param_5array catch_at_age_fleet_prop_temp;
  param_matrix abundance_move_temp;
  param_matrix bio_move_temp;
  param_matrix abundance_move_overlap_temp;
  param_5array abundance_AM_overlap_region_all_natal_temp;
  param_5array biomass_AM_overlap_region_all_natal_temp;
  param_3array SSB_natal_overlap_temp;
  param_4array abundance_natal_temp_overlap;
  param_4array SSB_population_temp_overlap;
  param_5array SSB_region_temp_overlap;
  param_5array survey_fleet_bio_overlap;
  param_4array survey_region_bio_overlap;
  param_3array survey_population_bio_overlap;
  param_matrix survey_natal_bio_overlap;
  param_vector survey_total_bio_overlap;
  param_5array survey_fleet_age;
  param_5array survey_at_age_fleet_prop;
  param_5array survey_fleet_age_bio;
  param_4array survey_fleet_bio;
  param_3array survey_region_bio;
  param_matrix survey_population_bio;
  param_vector survey_total_bio;
  param_5array catch_at_age_region_overlap;
  param_5array catch_at_age_region_overlap_prop;
  param_5array yield_region_fleet_overlap;
  param_4array yield_region_overlap;
  param_4array catch_at_age_population_overlap;
  param_4array catch_at_age_population_overlap_prop;
  param_3array yield_population_overlap;
  param_3array abundance_natal_overlap;
  param_5array biomass_BM_age_overlap;
  param_5array biomass_AM_age_overlap;
  param_4array biomass_BM_overlap_region;
  param_4array biomass_AM_overlap_region;
  param_4array biomass_AM_overlap_age_region_all_natal;
  param_3array biomass_AM_overlap_region_all_natal;
  param_3array biomass_population_overlap;
  param_matrix biomass_natal_overlap;
  param_3array catch_at_age_natal_overlap;
  param_3array catch_at_age_natal_overlap_prop;
  param_matrix yield_natal_overlap;
  param_5array harvest_rate_region_fleet_bio_overlap;
  param_4array harvest_rate_region_bio_overlap;
  param_3array harvest_rate_population_bio_overlap;
  param_matrix harvest_rate_natal_bio_overlap;
  param_4array depletion_region_overlap;
  param_3array depletion_population_overlap;
  param_matrix depletion_natal_overlap;
  param_3array Bratio_population_overlap;
  param_matrix Bratio_natal_overlap;
  param_matrix Bratio_population;
  param_vector Bratio_total;
  param_matrix SSB_overlap_natal;
  param_5array yield_region_temp_overlap;
  param_4array yield_population_temp_overlap;
  param_3array yield_natal_temp_overlap;
  param_5array catch_at_age_population_temp_overlap;
  param_4array catch_at_age_natal_temp_overlap;
  param_5array yield_fleet_temp;
  param_4array yield_region_temp;
  param_3array yield_population_temp;
  param_3array catch_at_age_total_temp;
  param_4array catch_at_age_population_temp;
  param_matrix yield_total_temp;
  param_4array SSB_region_temp;
  param_matrix SSB_total_temp;
  param_3array SSB_population_temp;
  param_3array biomass_population_temp;
  param_matrix biomass_total_temp;
  param_4array biomass_population_temp_overlap;
  param_3array biomass_natal_temp_overlap;
  param_4array abundance_population_temp;
  param_3array abundance_total_temp;
  param_3array total_recap_temp;
  param_matrix tags_avail_temp;
  param_3array tag_prop_temp;
  param_5array tag_prop_temp2;
  param_number survey_age_like;
  param_number fish_age_like;
  param_number rec_like;
  param_number tag_like;
  param_number tag_like_temp;
  param_number catch_like;
  param_number survey_like;
  param_number Tpen_like;
  param_init_number dummy;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value f;
public:
  virtual void userfunction(void);
  virtual void report(const dvector& gradients);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void){}
  void get_movement(void);
  void get_selectivity(void);
  void get_F_age(void);
  void get_vitals(void);
  void get_SPR(void);
  void get_abundance(void);
  void get_survey_CAA_prop(void);
  void get_CAA_prop(void);
  void get_tag_recaptures(void);
  void evaluate_the_objective_function(void);

};
#endif
